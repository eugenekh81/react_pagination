{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","React","memo","totalPages","perPage","currentPage","onPageChange","pages","Math","ceil","className","classNames","disabled","onClick","map","page","active","length","items","App","useSearchParams","searchParams","setSearchParams","Number","get","handlePerPageChange","useCallback","event","target","value","firstItem","lastItem","currentPageItems","slice","id","onChange","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a83581b5.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  currentPage: number,\n  totalPages: number,\n  perPage: number,\n  onPageChange: CallableFunction;\n};\n\nexport const Pagination: React.FC<Props> = React.memo(\n  ({\n    totalPages,\n    perPage,\n    currentPage,\n    onPageChange,\n  }) => {\n    const pages = getNumbers(1, Math.ceil(totalPages / perPage));\n\n    return (\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <Link\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            to={`?page=${currentPage - 1}&perPage=${perPage}`}\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              onPageChange({ currentPage: `${currentPage - 1}`, perPage: `${perPage}` });\n            }}\n          >\n            «\n          </Link>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              { active: page === +currentPage },\n            )}\n          >\n            <Link\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              to={`?page=${page}&perPage=${perPage}`}\n              onClick={() => {\n                if (page !== currentPage) {\n                  onPageChange({ page: `${page}`, perPage: `${perPage}` });\n                }\n              }}\n            >\n              {page}\n            </Link>\n          </li>\n        ))}\n        <li className={classNames(\n          'page-item',\n          { disabled: currentPage === pages.length },\n        )}\n        >\n          <Link\n            data-cy=\"nextLink\"\n            className={classNames(\n              'page-link',\n              { disabled: currentPage === pages.length },\n            )}\n            to={`?page=${currentPage !== pages.length ? currentPage + 1 : currentPage}&perPage=${perPage}`}\n            aria-disabled={currentPage === pages.length}\n            onClick={() => {\n              if (currentPage !== pages.length) {\n                onPageChange({ page: `${currentPage + 1}`, perPage: `${perPage}` });\n              }\n            }}\n          >\n            »\n          </Link>\n        </li>\n      </ul>\n    );\n  },\n);\n","import React, { useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\nimport './App.css';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = Number(searchParams.get('page')) || 1;\n  const perPage = Number(searchParams.get('perPage')) || 5;\n  const totalPages: number = items.length;\n\n  const handlePerPageChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setSearchParams({ page: '1', perPage: event.target.value || '3' });\n    }, [],\n  );\n\n  const firstItem = (+page - 1) * perPage;\n  const lastItem = (firstItem + perPage) > totalPages\n    ? totalPages\n    : firstItem + perPage;\n  const currentPageItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstItem + 1} - ${lastItem} of ${totalPages})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        totalPages={totalPages}\n        currentPage={+page}\n        perPage={perPage}\n        onPageChange={setSearchParams}\n      />\n\n      <ul>\n        {currentPageItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}